//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Input System/Debug Input/DebugInputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DebugInputMaster: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DebugInputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DebugInputMaster"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f56e3077-7e32-4791-8ba7-0f4f559da954"",
            ""actions"": [
                {
                    ""name"": ""Moon Jump"",
                    ""type"": ""Button"",
                    ""id"": ""9a322e9c-4b51-417a-ad12-a76764a59851"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Break"",
                    ""type"": ""Button"",
                    ""id"": ""1347db87-9b2a-4731-9f80-d4ee1944f8c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDebugUI"",
                    ""type"": ""Button"",
                    ""id"": ""00ed70c5-9cc9-4e8e-84da-d8876ce8a7e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap Character"",
                    ""type"": ""Button"",
                    ""id"": ""0c1bce1a-23f0-418b-9c1e-abcd1fb9806d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap Palette"",
                    ""type"": ""Button"",
                    ""id"": ""35feaa14-20c3-4276-a0b2-0657c600ab57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 0"",
                    ""type"": ""Button"",
                    ""id"": ""cf5544b8-896e-4e14-9d52-13eaf9fce5fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 1"",
                    ""type"": ""Button"",
                    ""id"": ""7898b36c-e220-4ddd-aeca-55fb8bb83b75"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 2"",
                    ""type"": ""Button"",
                    ""id"": ""15d4f2e3-1539-4cee-8438-2bdd3bdb57b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 3"",
                    ""type"": ""Button"",
                    ""id"": ""3c900c6c-e4cb-40d2-9dd5-c75ae7914f32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 4"",
                    ""type"": ""Button"",
                    ""id"": ""d8ff9958-3de0-42b9-89ba-16bb3748cc7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power Up 5"",
                    ""type"": ""Button"",
                    ""id"": ""69ab3a9e-d459-46e2-9ad4-4ae7536b22b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Speed Burst"",
                    ""type"": ""Button"",
                    ""id"": ""0a817f85-f0ce-4378-b84d-7262ff04e3f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Time Slowdown"",
                    ""type"": ""Button"",
                    ""id"": ""cda9285f-2177-4cef-bad4-9cd6201365a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grant All Emeralds"",
                    ""type"": ""Button"",
                    ""id"": ""4b8cec60-044c-40de-8e72-30d0ac49ec35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0fbaa742-9f55-4726-9e77-2edad4114fff"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Moon Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fd1e963-310f-430a-a208-b98f647e64cd"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moon Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaeaddf4-b985-4a20-b376-e6d20c7835b5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Break"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9c96154-d248-494c-a935-d51a100927e5"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Swap Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7311a10-a4cc-4817-a7eb-2ca70f4b38f6"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49803625-4a6c-4e11-8459-f6f440b7cd63"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3e0bff7-6ce0-446b-8ca4-1c90f618de76"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Swap Palette"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1b8321e-4237-4728-bd4c-469c43b7cd8b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Swap Palette"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1c30fd9-ca33-4ed0-ba1c-ab415758f89e"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Swap Palette"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3659cb11-d1cb-4210-91de-d430843f1e08"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67be3d3c-1571-4315-826f-a3c196986e29"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93bd680a-a098-40e5-a61f-2f03417d0a5a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23979883-dbc3-4e86-9570-ced449b6cfcc"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55bd8ee4-f078-47b3-93a7-da7a0974f0e5"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""defcd4eb-8c9f-4817-b345-b3cd048ffcd6"",
                    ""path"": ""<Keyboard>/OEM1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Speed Burst"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ebcce01-3a8d-49ab-9fcc-8b3b9aaad094"",
                    ""path"": ""<Keyboard>/rightAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Time Slowdown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ca0be5c-04b4-4274-b177-01646b3f55d4"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Power Up 0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80e233c6-4e12-45f3-a16b-4a321312bca2"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Grant All Emeralds"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82c92899-80b5-42fb-a7d8-bfc397114bdb"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grant All Emeralds"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""748d73b1-752b-4f4c-a47a-56ace2f20058"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ToggleDebugUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c753096c-c23d-466a-b17a-927ee9b595cb"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ToggleDebugUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MoonJump = m_Player.FindAction("Moon Jump", throwIfNotFound: true);
        m_Player_Break = m_Player.FindAction("Break", throwIfNotFound: true);
        m_Player_ToggleDebugUI = m_Player.FindAction("ToggleDebugUI", throwIfNotFound: true);
        m_Player_SwapCharacter = m_Player.FindAction("Swap Character", throwIfNotFound: true);
        m_Player_SwapPalette = m_Player.FindAction("Swap Palette", throwIfNotFound: true);
        m_Player_PowerUp0 = m_Player.FindAction("Power Up 0", throwIfNotFound: true);
        m_Player_PowerUp1 = m_Player.FindAction("Power Up 1", throwIfNotFound: true);
        m_Player_PowerUp2 = m_Player.FindAction("Power Up 2", throwIfNotFound: true);
        m_Player_PowerUp3 = m_Player.FindAction("Power Up 3", throwIfNotFound: true);
        m_Player_PowerUp4 = m_Player.FindAction("Power Up 4", throwIfNotFound: true);
        m_Player_PowerUp5 = m_Player.FindAction("Power Up 5", throwIfNotFound: true);
        m_Player_SpeedBurst = m_Player.FindAction("Speed Burst", throwIfNotFound: true);
        m_Player_TimeSlowdown = m_Player.FindAction("Time Slowdown", throwIfNotFound: true);
        m_Player_GrantAllEmeralds = m_Player.FindAction("Grant All Emeralds", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_MoonJump;
    private readonly InputAction m_Player_Break;
    private readonly InputAction m_Player_ToggleDebugUI;
    private readonly InputAction m_Player_SwapCharacter;
    private readonly InputAction m_Player_SwapPalette;
    private readonly InputAction m_Player_PowerUp0;
    private readonly InputAction m_Player_PowerUp1;
    private readonly InputAction m_Player_PowerUp2;
    private readonly InputAction m_Player_PowerUp3;
    private readonly InputAction m_Player_PowerUp4;
    private readonly InputAction m_Player_PowerUp5;
    private readonly InputAction m_Player_SpeedBurst;
    private readonly InputAction m_Player_TimeSlowdown;
    private readonly InputAction m_Player_GrantAllEmeralds;
    public struct PlayerActions
    {
        private @DebugInputMaster m_Wrapper;
        public PlayerActions(@DebugInputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoonJump => m_Wrapper.m_Player_MoonJump;
        public InputAction @Break => m_Wrapper.m_Player_Break;
        public InputAction @ToggleDebugUI => m_Wrapper.m_Player_ToggleDebugUI;
        public InputAction @SwapCharacter => m_Wrapper.m_Player_SwapCharacter;
        public InputAction @SwapPalette => m_Wrapper.m_Player_SwapPalette;
        public InputAction @PowerUp0 => m_Wrapper.m_Player_PowerUp0;
        public InputAction @PowerUp1 => m_Wrapper.m_Player_PowerUp1;
        public InputAction @PowerUp2 => m_Wrapper.m_Player_PowerUp2;
        public InputAction @PowerUp3 => m_Wrapper.m_Player_PowerUp3;
        public InputAction @PowerUp4 => m_Wrapper.m_Player_PowerUp4;
        public InputAction @PowerUp5 => m_Wrapper.m_Player_PowerUp5;
        public InputAction @SpeedBurst => m_Wrapper.m_Player_SpeedBurst;
        public InputAction @TimeSlowdown => m_Wrapper.m_Player_TimeSlowdown;
        public InputAction @GrantAllEmeralds => m_Wrapper.m_Player_GrantAllEmeralds;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @MoonJump.started += instance.OnMoonJump;
            @MoonJump.performed += instance.OnMoonJump;
            @MoonJump.canceled += instance.OnMoonJump;
            @Break.started += instance.OnBreak;
            @Break.performed += instance.OnBreak;
            @Break.canceled += instance.OnBreak;
            @ToggleDebugUI.started += instance.OnToggleDebugUI;
            @ToggleDebugUI.performed += instance.OnToggleDebugUI;
            @ToggleDebugUI.canceled += instance.OnToggleDebugUI;
            @SwapCharacter.started += instance.OnSwapCharacter;
            @SwapCharacter.performed += instance.OnSwapCharacter;
            @SwapCharacter.canceled += instance.OnSwapCharacter;
            @SwapPalette.started += instance.OnSwapPalette;
            @SwapPalette.performed += instance.OnSwapPalette;
            @SwapPalette.canceled += instance.OnSwapPalette;
            @PowerUp0.started += instance.OnPowerUp0;
            @PowerUp0.performed += instance.OnPowerUp0;
            @PowerUp0.canceled += instance.OnPowerUp0;
            @PowerUp1.started += instance.OnPowerUp1;
            @PowerUp1.performed += instance.OnPowerUp1;
            @PowerUp1.canceled += instance.OnPowerUp1;
            @PowerUp2.started += instance.OnPowerUp2;
            @PowerUp2.performed += instance.OnPowerUp2;
            @PowerUp2.canceled += instance.OnPowerUp2;
            @PowerUp3.started += instance.OnPowerUp3;
            @PowerUp3.performed += instance.OnPowerUp3;
            @PowerUp3.canceled += instance.OnPowerUp3;
            @PowerUp4.started += instance.OnPowerUp4;
            @PowerUp4.performed += instance.OnPowerUp4;
            @PowerUp4.canceled += instance.OnPowerUp4;
            @PowerUp5.started += instance.OnPowerUp5;
            @PowerUp5.performed += instance.OnPowerUp5;
            @PowerUp5.canceled += instance.OnPowerUp5;
            @SpeedBurst.started += instance.OnSpeedBurst;
            @SpeedBurst.performed += instance.OnSpeedBurst;
            @SpeedBurst.canceled += instance.OnSpeedBurst;
            @TimeSlowdown.started += instance.OnTimeSlowdown;
            @TimeSlowdown.performed += instance.OnTimeSlowdown;
            @TimeSlowdown.canceled += instance.OnTimeSlowdown;
            @GrantAllEmeralds.started += instance.OnGrantAllEmeralds;
            @GrantAllEmeralds.performed += instance.OnGrantAllEmeralds;
            @GrantAllEmeralds.canceled += instance.OnGrantAllEmeralds;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @MoonJump.started -= instance.OnMoonJump;
            @MoonJump.performed -= instance.OnMoonJump;
            @MoonJump.canceled -= instance.OnMoonJump;
            @Break.started -= instance.OnBreak;
            @Break.performed -= instance.OnBreak;
            @Break.canceled -= instance.OnBreak;
            @ToggleDebugUI.started -= instance.OnToggleDebugUI;
            @ToggleDebugUI.performed -= instance.OnToggleDebugUI;
            @ToggleDebugUI.canceled -= instance.OnToggleDebugUI;
            @SwapCharacter.started -= instance.OnSwapCharacter;
            @SwapCharacter.performed -= instance.OnSwapCharacter;
            @SwapCharacter.canceled -= instance.OnSwapCharacter;
            @SwapPalette.started -= instance.OnSwapPalette;
            @SwapPalette.performed -= instance.OnSwapPalette;
            @SwapPalette.canceled -= instance.OnSwapPalette;
            @PowerUp0.started -= instance.OnPowerUp0;
            @PowerUp0.performed -= instance.OnPowerUp0;
            @PowerUp0.canceled -= instance.OnPowerUp0;
            @PowerUp1.started -= instance.OnPowerUp1;
            @PowerUp1.performed -= instance.OnPowerUp1;
            @PowerUp1.canceled -= instance.OnPowerUp1;
            @PowerUp2.started -= instance.OnPowerUp2;
            @PowerUp2.performed -= instance.OnPowerUp2;
            @PowerUp2.canceled -= instance.OnPowerUp2;
            @PowerUp3.started -= instance.OnPowerUp3;
            @PowerUp3.performed -= instance.OnPowerUp3;
            @PowerUp3.canceled -= instance.OnPowerUp3;
            @PowerUp4.started -= instance.OnPowerUp4;
            @PowerUp4.performed -= instance.OnPowerUp4;
            @PowerUp4.canceled -= instance.OnPowerUp4;
            @PowerUp5.started -= instance.OnPowerUp5;
            @PowerUp5.performed -= instance.OnPowerUp5;
            @PowerUp5.canceled -= instance.OnPowerUp5;
            @SpeedBurst.started -= instance.OnSpeedBurst;
            @SpeedBurst.performed -= instance.OnSpeedBurst;
            @SpeedBurst.canceled -= instance.OnSpeedBurst;
            @TimeSlowdown.started -= instance.OnTimeSlowdown;
            @TimeSlowdown.performed -= instance.OnTimeSlowdown;
            @TimeSlowdown.canceled -= instance.OnTimeSlowdown;
            @GrantAllEmeralds.started -= instance.OnGrantAllEmeralds;
            @GrantAllEmeralds.performed -= instance.OnGrantAllEmeralds;
            @GrantAllEmeralds.canceled -= instance.OnGrantAllEmeralds;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMoonJump(InputAction.CallbackContext context);
        void OnBreak(InputAction.CallbackContext context);
        void OnToggleDebugUI(InputAction.CallbackContext context);
        void OnSwapCharacter(InputAction.CallbackContext context);
        void OnSwapPalette(InputAction.CallbackContext context);
        void OnPowerUp0(InputAction.CallbackContext context);
        void OnPowerUp1(InputAction.CallbackContext context);
        void OnPowerUp2(InputAction.CallbackContext context);
        void OnPowerUp3(InputAction.CallbackContext context);
        void OnPowerUp4(InputAction.CallbackContext context);
        void OnPowerUp5(InputAction.CallbackContext context);
        void OnSpeedBurst(InputAction.CallbackContext context);
        void OnTimeSlowdown(InputAction.CallbackContext context);
        void OnGrantAllEmeralds(InputAction.CallbackContext context);
    }
}
